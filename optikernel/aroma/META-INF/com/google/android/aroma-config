# -------------------------------
# optikernel AROMA INSTALLER v3.0
# aroma-config portion
#
# Created by djb77 from XDA 
# DO NOT USE ANY PORTION OF THIS
# CODE WITHOUT HIS PERMISSION!!
#
# Modified by GhaithCraft to support optikernel Kernel
# -------------------------------

# ROM INFO
ini_set("force_colorspace","rgba");
ini_set("rom_name", "optikernel");
ini_set("rom_version", "###VERSION###");
ini_set("rom_author", "GhaithCraft");
ini_set("rom_device", "###DEVICE###");
ini_set("rom_date", "###DATE###");

# SETUP
# -----
writetmpfile("patch.prop","install=0");
writetmpfile("okm.prop","install=0");
writetmpfile("busybox.prop","install=0");
writetmpfile("pwm.prop","install=0");
writetmpfile("magisk.prop","install=0");
writetmpfile("supersu.prop","install=0");
writetmpfile("selinux.prop","install=0");
writetmpfile("wipe.prop","install=0");
writetmpfile("backup.prop","install=0");
writetmpfile("optikernel-backup.prop","install=0");
writetmpfile("optikernel-restore.prop","install=0");
writetmpfile("advanced.prop","install=0");

# SET LANGUAGE
# ------------
loadlang("langs/en.lang");

# Set Small Font to Support all fonts
# -----------------------------------
fontresload( "0", "ttf/Roboto-Regular.ttf;ttf/DroidSansFallback.ttf;", "12" ); #-- Use sets of font (Font Family)
fontresload( "1", "ttf/Roboto-Regular.ttf;ttf/DroidSansFallback.ttf;", "14" ); #-- Use sets of font (Font Family)

# SET THEME
# ---------
theme("materialize_blue-grey");

# SPLASH SCREEN
# -------------
splash(3000,"splash");

# CHECK FOR DEVICE VARIANT
# ------------------------
restotmp("scripts/wipe.sh","wipe.sh");
restotmp("scripts/backup.sh","backup.sh");
restotmp("scripts/restore.sh","restore.sh");
restotmp("scripts/config_check.sh","config_check.sh");
restotmp("scripts/supersu.sh","supersu.sh");

##
#SHOW KERNEL INFORMATION
#

viewbox(
  #-- Title
    "optikernel KERNEL",
  
  #-- Text
    "You are about to Install <b>"+
	  #-- Get Config Value
	  ini_get("rom_name")+
	"</b> <~common.for> <b>"+ini_get("rom_device")+"</b>.\n\n"+
    
    "\n\n"+
	
      "  <b>VERSION</b>\t: <b><#selectbg_g>"+ini_get("rom_version")+"</#></b>\n"+
      "  <b>AUTHOR</b>\t\t: <b><#selectbg_g>"+ini_get("rom_author")+"</#></b>\n"+
	  "  <b>DEVICE</b>\t\t: <b><#selectbg_g>"+ini_get("rom_device")+"</#></b>\n"+
	  "  <b>UPDATED</b>\t: <b><#selectbg_g>"+ini_get("rom_date")+"</#></b>\n\n\n"+

    "Press Next to Continue the Installation...",
  
  #-- Icon
    ""
);

##
# CHANGELOG DISPLAY
#

textdialog(
    "optikernel Kernel Changelog",
    resread("changelog.txt"),
    #-- Custom OK Button Text (Optional)
    "Close"
 );

# CHECK FOR CONFIG BACKUP
# -----------------------
exec("/tmp/aroma/config_check.sh","","","");
if (prop("backup.prop","install")=="1") then
	setvar(
	"backup_text",
	"<b>CONFIGURATION BACKUP FOUND</b>\n\n"+
	"The installer has located a saved configuration for optikernel Kernel in your Internal Memory.\n\n"+
	"You will now be given an option to use this configuration and proceed straight to the installer, "+
	"Skipping all the installation selection screens.\n\n"+
	"Press the <b>Next</b> button, then select <b>Yes</b> or <b>No</b> on the Popup Dialog Box."+
	""
	);
	textbox(
	"optikernel Kernel",
	" ",
	"@deafult",
	getvar("backup_text")
	);
	if
		confirm(
		"optikernel Kernel",
		"Would you like to use your current saved configuration?",
		"@default"
		)=="yes"
	then
		writetmpfile("optikernelkernel-restore.prop","install=1");
	else
		writetmpfile("optikernelkernel-restore.prop","install=0");
	endif;
endif;

if (prop("optikernelkernel-restore.prop","install")=="0") then

# INSTALL OPTIONS
# ---------------
	selectbox(
		"optikernel",
		"Backup and Root Options",
		"",
		"options.prop",
		"Backup your settings?", "", 2,
		"Yes", "", 0,
		"No", "", 1,
		"What root do you want?", "", 2,
		"Magisk", "", 0,
		"SuperSU", "", 1,
		"No Root", "", 0,
		"Wipe old Magisk / SuperSU Installs?", "", 2,
		"Yes", "", 0,
		"No", "", 1
	);
	if (prop("options.prop","selected.1")=="1") then
		writetmpfile("optikernelkernel-backup.prop","install=1");
	endif;
	if (prop("options.prop","selected.2")=="1") then
		writetmpfile("magisk.prop","install=1");
	endif;
	if (prop("options.prop","selected.2")=="2") then
		writetmpfile("supersu.prop","install=1");
	endif;
	if (prop("options.prop","selected.3")=="1") then
		writetmpfile("wipe.prop","install=1");
	endif;

# SUPERSU OPTIONS
# ---------------
	if (prop("options.prop","selected.2")=="2") then
		selectbox(
			"optikernel",
			"SuperSU Encryption Options",
			"",
			"su_encrypt.prop",
			"dm-verity", "", 2,
			"Auto-detect", "Let SuperSU decide", 1,
			"Remove", "Disable dm-verity, default", 0,
			"Keep", "Keep dm-verity enabled. Prevents booting with a modified system partition.", 0,
			"Force Encrypt", "", 2,
			"Auto-detect", "Let SuperSU decide", 1,
			"Remove", "Disable forced encryption of the data partition, default", 0,
			"Keep", "Keep data encryption force enabled", 0,
			"Encryptable", "", 2,
			"Auto-detect", "Let SuperSU decide", 1,
			"Remove", "Disable encryption of the data partition completely, default on Samsung >= 7.0", 0,
			"Keep", "Keep optional data encryption enabled, default on all other devices", 0
		);
		selectbox(
			"optikernel Kernel",
			"SuperSU - Misc Options",
			"",
			"su_misc.prop",
			"Factory reset protection", "", 2,
			"Auto-detect", "Let SuperSU decide", 1,
			"Enable", "Allow su binaries (not the GUI) to survive a data wipe. Most devices lack space for this.", 0,
			"Disable", "Do not survive a data wipe. Default on most devices.", 0,
			"Bind /system/xbin", "", 2,
			"Auto-detect", "Let SuperSU decide", 1,
			"Enable", "Make the su binaries appear in /system/xbin. Compatibility feature required only for outdated root apps.", 0,
			"Disable", "Normal compatibility, default", 0,
			"SELinux", "", 2,
			"Auto-detect", "Let SuperSU decide", 1,
			"Enforcing", "Keep SELinux in enforcing mode, patching only the needed rules to allow SuperSU to function, default", 0,
			"Permissive", "Set SELinux to permissive mode, disabling its added security", 0
		);
	endif;

# INSTALL APPS
# ------------
	selectbox(
		"optikernel",
		"Install Apps",
		"",
		"apps.prop",
		"Install Kernel Manager?", "", 2,
		"Yes", "Recommended for tweaking kernel features", 1,
		"No", "", 0,
		"Do you want to install Busybox?", "", 2,
		"Yes", "Needed for basic functionality", 1,
		"No", "", 0
	);
	if (prop("apps.prop","selected.1")=="1") then
		writetmpfile("patch.prop","install=1");
	endif;
	if (prop("apps.prop","selected.2")=="1") then
		writetmpfile("okm.prop","install=1");
	endif;
	if (prop("apps.prop","selected.3")=="1") then
		writetmpfile("busybox.prop","install=1");
	endif;

# KERNEL OPTIONS
# --------------
	selectbox(
		"optikernel",
		"optikernel Options",
		"",
		"kernel.prop",
		"How do you want SELinux set?", "", 2,
		"Permissive", "", 1,
		"Enforcing", "", 0,
		"Do you want to enter Advanced Options?", "", 2,
		"Yes", "Overclock, I/O Schedulers, GPU, etc", 0,
		"No", "", 1
	);
	if (prop("kernel.prop","selected.1")=="2") then
		writetmpfile("patch.prop","install=1");
		writetmpfile("selinux.prop","install=1");
	endif;
	if (prop("kernel.prop","selected.2")=="1") then
		writetmpfile("patch.prop","install=1");
		writetmpfile("pwm.prop","install=1");
	endif;

# ADVANCED OPTIONS
# ----------------
	if (prop("kernel.prop","selected.3")=="1") then
		writetmpfile("patch.prop","install=1");
		writetmpfile("advanced.prop","install=1");

# ADVANCED PAGE 1 - CPU GOVERNORS
# -------------------------------------
		form(
			"optikernel",
			"optikernel Advanced Options",
			"",
			"governor-big.prop",
			"governor-big", "Select your CPU Governor (stock=interactive)", "", "group",
			"alucard", "alucard", "", "select",
			"cafactive", "cafactive", "", "select",
			"conservative", "conservative", "", "select",
			"dancedance", "dancedance", "", "select",
			"darkness", "darkness", "", "select",
			"electrodemand", "electrodemand", "", "select",
			"HYPER", "hyper", "", "select",
			"intelliactive", "intelliactive", "", "select",
			"arteractive", "arteractive", "", "select",
			"intellidemand", "intellidemand", "", "select",
			"intellimm", "", "intellimm", "select",
			"interactive", "interactive", "", "select.selected",
			"Lionheart", "lionheart", "", "select",
			"nightmare", "nightmare", "", "select",
			"ondemand", "ondemand", "", "select",
			"ondemandplus", "ondemandplus", "", "select",
			"ondemand_x", "ondemand_x", "", "select",
			"pegasusq", "pegasusq", "", "select",
			"performance", "performance", "", "select",
			"powersave", "powersave", "", "select",	
			"smartassV2", "smartassV2", "", "select",
			"smartmax", "smartmax", "", "select",
			"smartmax_eps", "smartmax_eps", "", "select",
			"userspace", "userspace", "", "select",
			"yankactive", "yankactive", "", "select",
			"zzmoove", "zzmoove", "", "select"
		);



# ADVANCED PAGE 2 - IO SCHEDULERS (INTERNAL)
# ------------------------------------------
		form(
			"optikernel",
			"optikernel Advanced Options",
			"",
			"scheduler-internal.prop",
			"scheduler-internal", "Select your IO Scheduler (Internal) (stock=cfq)", "", "group",
			"bfq", "bfq", "", "select",
			"cfq", "cfq", "", "select.selected",
			"deadline", "deadline", "", "select",
			"fifo", "fifo", "", "select",
			"fiops", "fiops", "", "select",
			"noop", "noop", "", "select",
			"row", "row", "", "select",
			"sio", "sio", "", "select",
			"sioplus", "sioplus", "", "select",
			"tripndroid", "tripndroid", "", "select",
			"vr", "vr", "", "select",
			"zen", "zen", "", "select"
		);

# ADVANCED PAGE 3 - IO SCHEDULERS (EXTERNAL)
# ------------------------------------------
		form(
			"optikernel",
			"optikernel Advanced Options",
			"",
			"scheduler-external.prop",
			"scheduler-external", "Select your IO Scheduler (External) (stock=cfq)", "", "group",
			"bfq", "bfq", "", "select",
			"cfq", "cfq", "", "select.selected",
			"deadline", "deadline", "", "select",
			"fifo", "fifo", "", "select",
			"fiops", "fiops", "", "select",
			"noop", "noop", "", "select",
			"row", "row", "", "select",
			"sio", "sio", "", "select",
			"sioplus", "sioplus", "", "select",
			"tripndroid", "tripndroid", "", "select",
			"vr", "vr", "", "select",
			"zen", "zen", "", "select"
		);

# ADVANCED PAGE 4 - CONGESTORS
# -----------------------------
		form(
			"optikernel",
			"optikernel Advanced Options",
			"",
			"tcp.prop",
			"tcp", "Select your TCP Congestion Algorithm (Internet) (stock=westwood)", "", "group",
			"balia", "balia", "", "select",
			"bic", "bic", "", "select",
			"cubic", "cubic", "", "select",
			"dctcp", "dctcp", "", "select",
			"htcp", "htcp", "", "select",
			"hybla", "hybla", "", "select",
			"illinois", "illinois", "", "select",
			"lia", "lia", "", "select",
			"lp", "lp", "", "select",
			"olia", "olia", "", "select",
			"reno", "reno", "", "select",
			"scalable", "scalable", "", "select",
			"vegas", "vegas", "", "select",
			"veno", "veno", "", "select",
			"westwood", "westwood", "", "select.selected",
			"wvegas", "wvegas", "", "select",
			"yeah", "yeah", "", "select"
		);

	endif;
endif;
	
setvar(
	"backup_text",
	"<b>CONFIGURATION OVER</b>\n\n"+
	""+
	""+
	""+
	"Press the <b>Next</b> button to start installing"+
	""
	);
	
viewbox(
    "optikernel KERNEL",
	"\n\n\n\n\n\n"+
    "Press Next to Continue the Installation...",
    ""
);

# INSTALL PROCESS
# --------------
setvar("retstatus",
install(
	"optikernel Kernel",
	"Installing, Please Wait... This may take a while.",
	"",
	"The installation wizard has successfully finished."
)
);

